NAME
    Devel::EndStats - Show various statistics at the end of program run

VERSION
    version 0.03

SYNOPSIS
     # from the command line
     % perl -MDevel::EndStats script.pl

DESCRIPTION
    Devel::EndStats runs in the END block, displaying various statistics
    about your program, such as: how many seconds the program ran, how many
    module files and total number of lines loaded (by inspecting %INC), etc.

    Some notes/caveats:

    END blocks declared after Devel::EndStats' will be executed after it, so
    in that case it's ideal to load Devel::EndStats as the last module.

    In modules statistics, Devel::EndStats excludes itself and the modules
    it uses. Devel::EndStats tries to check whether those modules are
    actually loaded/used by your program instead of just by Devel::EndStats
    and if so, will not exclude them.

OPTIONS
    Some options are accepted. They can be passed via the use statement:

     # from the command line
     % perl -MDevel::EndStats=verbose,1 script.pl

     # from script
     use Devel::EndStats verbose=>1;

    or via the DEVELENDSTATS_OPTS environment variable:

     % DEVELENDSTATS_OPTS='verbose=1' perl -MDevel::EndStats script.pl

    *   verbose => BOOL

        Can also be set via VERBOSE environment variable. If set to true,
        display more statistics (like per-module statistics). Default is 0.

    *   exclude_endstats_modules => BOOL

        If set to true, exclude Devel::EndStats itself and the modules it
        uses from the statistics. Default is 1.

FAQ
  What is the purpose of this module?
    This module might be useful during development. I first wrote this
    module when trying to reduce startup overhead of a command line
    application, by looking at how many modules the app has loaded and try
    to avoid loading modules whenever it's unnecessary.

  Can you add (so and so) information to the stats?
    Sure, if it's useful. As they say, (comments|patches) are welcome.

SEE ALSO
TODO
    * Stat: memory usage. * Subsecond program duration. * Stat: system/user
    time. * Stat: number of open files (sockets). * Stat: number of child
    processes. * Stat: number of XS vs PP modules. * Feature: remember last
    run's stats, compare with current run.

AUTHOR
      Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2010 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

